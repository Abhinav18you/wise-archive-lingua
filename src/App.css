
/* Reset default styles */
#root {
  max-width: none;
  margin: 0;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

/* Enhanced logo animations */
.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}

.logo:hover {
  filter: drop-shadow(0 0 2em hsl(var(--primary) / 0.7));
}

.logo.react:hover {
  filter: drop-shadow(0 0 2em hsl(var(--accent) / 0.7));
}

/* Logo glow effect */
.logo-glow {
  filter: drop-shadow(0 0 5px hsl(var(--primary) / 0.7));
  animation: logo-pulse 3s infinite;
}

@keyframes logo-pulse {
  0%, 100% {
    filter: drop-shadow(0 0 5px hsl(var(--primary) / 0.7));
  }
  50% {
    filter: drop-shadow(0 0 15px hsl(var(--primary) / 0.9));
  }
}

/* Enhanced animations */
@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

/* Modern card styling */
.card {
  padding: 2em;
  border-radius: var(--radius);
  background-color: hsl(var(--card));
  box-shadow: 0 4px 24px -8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.card:hover {
  box-shadow: 0 8px 32px -12px rgba(0, 0, 0, 0.15);
  transform: translateY(-5px);
}

/* 3D card effect */
.card-3d {
  transition: all 0.3s ease;
  transform-style: preserve-3d;
  perspective: 1000px;
}

.card-3d:hover {
  transform: rotateX(5deg) rotateY(5deg);
}

/* Documentation link styling */
.read-the-docs {
  color: hsl(var(--muted-foreground));
  font-size: 0.875rem;
  transition: color 0.2s ease;
}

.read-the-docs:hover {
  color: hsl(var(--accent));
}

/* Global link styling */
a {
  color: hsl(var(--primary));
  text-decoration: none;
  transition: color 0.2s ease, text-decoration 0.2s ease;
}

a:hover {
  color: hsl(var(--accent));
  text-decoration: underline;
}

/* Smooth page transitions */
.page-transition {
  animation: fade-in 0.3s ease;
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Button animations */
.button-pulse {
  position: relative;
}

.button-pulse::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background-color: hsl(var(--primary) / 0.5);
  animation: pulse-ring 1.5s infinite;
  z-index: -1;
}

@keyframes pulse-ring {
  0% {
    transform: scale(0.95);
    opacity: 0.7;
  }
  50%, 100% {
    transform: scale(1.05);
    opacity: 0;
  }
}

/* Gradient button hover effect */
.gradient-button {
  background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--accent)));
  background-size: 150% auto;
  transition: all 0.5s ease;
  background-position: 0% 50%;
}

.gradient-button:hover {
  background-position: 100% 50%;
  transform: translateY(-2px);
  box-shadow: 0 10px 25px -10px hsl(var(--primary) / 0.5);
}

/* Professional glassmorphism effect */
.glass-panel {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
}

/* Interactive floating elements */
.floating-element {
  animation: float 6s ease-in-out infinite;
  transform-origin: center center;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

/* Rotating globe effect for icons */
.rotating-element {
  animation: rotate 20s linear infinite;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Enhanced hover effects for cards */
.hover-lift {
  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1), box-shadow 0.3s ease;
}

.hover-lift:hover {
  transform: translateY(-8px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}
